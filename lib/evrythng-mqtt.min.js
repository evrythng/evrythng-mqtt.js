!function(a,b){"use strict";module.exports=b(require("mqtt"))}(this,function(a){"use strict";function b(a){return a+"_"+Math.random().toString(16).substr(2,8)}function c(b){return b.mqttClient instanceof a.Client&&b.mqttClient.connected===!0}function d(d){var e=h.settings;return new Promise(function(f,g){if(c(d))f(d.mqttClient);else{var h=b(e.clientIdPrefix),i={username:"authorization",password:d.apiKey,clientId:h,keepalive:e.keepAlive,reconnectPeriod:e.reconnectPeriod},j=a.connect(e.apiUrl,i);j.once("connect",function(){d.mqttClient=j,f(d.mqttClient)}),j.on("error",function(a){g(a)})}})}function e(a,b,e){var f=this;return d(this.scope).then(function(d){return new Promise(function(g,h){function i(a){a?(e&&e(a),h(a)):(b&&b(),g())}c(f.scope)||h("MQTT Client is not connected."),a=JSON.stringify(f.jsonify(a)),d.publish(f.path,a,i)})})}var f="1.0.4",g={apiUrl:"mqtts://mqtt.evrythng.com:8883/mqtt",reconnectPeriod:1e3,keepAlive:10,clientIdPrefix:"evtjs"},h={version:f,settings:g,setup:function(a){if("[object Object]"!==Object.prototype.toString.call(a))throw new TypeError("Setup should be called with an options object.");for(var b in a)a.hasOwnProperty(b)&&(this.settings[b]=a[b]);return this.settings},install:function(a,b){function f(a,b,c){if("[object Function]"!=Object.prototype.toString.call(a))throw new TypeError("Message callback missing.");var e=this;return d(this.scope).then(function(d){return new Promise(function(f,g){function h(h){h?(c&&c(h),g(h)):(d.on("message",function(b,c){if(e.path===b){var d=c.toString();try{d=e.parse(JSON.parse(d))}catch(f){}a(d)}}),d.on("error",function(a){c&&c(a),g(a)}),b&&b(d),f(d))}d.subscribe(e.path,h)})},function(a){return c&&c(a),Promise.reject(a)})}function g(a,b){var d=this;return new Promise(function(e,f){function g(c){c?(b&&b(c),f(c)):(a&&a(d.scope.mqttClient),e(d.scope.mqttClient))}c(d.scope)||f("MQTT Client is not connected."),d.scope.mqttClient.unsubscribe(d.path,g)})}function h(a,c,d){var f=this;"undefined"==typeof a&&(a={});var g=this["class"]===b["class"]?"create":"update";return new Promise(function(b,h){var i={request:function(a,g){g(),e.call(f,a.data,c,d).then(b,h)}};f[g](a,{interceptors:[i]})["catch"](function(a){if(!a.cancelled)throw a})})}a.prototype.subscribe=f,a.prototype.unsubscribe=g,a.prototype.publish=h}};return h.$inject=["resource","entity/action"],h});
//# sourceMappingURL=evrythng-mqtt.min.js.map